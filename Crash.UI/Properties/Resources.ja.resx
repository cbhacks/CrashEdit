<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="ChunkController_AcDelete" xml:space="preserve">
    <value>チャンクの削除</value>
  </data>
  <data name="ChunkController_AcDeleteWithEName" xml:space="preserve">
    <value>チャンク 「{0}」 の削除</value>
  </data>
  <data name="ChunkController_AcDeprocess" xml:space="preserve">
    <value>チャンクの未処理化</value>
  </data>
  <data name="ChunkController_AcDeprocessWithEName" xml:space="preserve">
    <value>チャンク 「{0}」 の未処理化</value>
  </data>
  <data name="Controller_NoOptionsAvailable" xml:space="preserve">
    <value>利用可能なオプションはありません</value>
  </data>
  <data name="DemoEntryController_Text" xml:space="preserve">
    <value>デモ ({0})</value>
  </data>
  <data name="EntryController_AcDelete" xml:space="preserve">
    <value>エントリ 「{0}」 の削除</value>
  </data>
  <data name="EntryController_AcDeprocess" xml:space="preserve">
    <value>エントリ 「{0}」 の未処理化</value>
  </data>
  <data name="GameVersionForm_Message" xml:space="preserve">
    <value>ゲームバージョンを選択してください。NTSC-U 版、NTSC-J 版及び PAL 版は全てサポートされています。</value>
  </data>
  <data name="GameVersionForm_Prerelease" xml:space="preserve">
    <value>プレリリース版</value>
  </data>
  <data name="GameVersionForm_Release" xml:space="preserve">
    <value>製品版</value>
  </data>
  <data name="GameVersionForm_Text" xml:space="preserve">
    <value>ゲームバージョンの選択</value>
  </data>
  <data name="ModelEntryController_Text" xml:space="preserve">
    <value>モデル ({0})</value>
  </data>
  <data name="MusicEntryController_Text" xml:space="preserve">
    <value>音楽 ({0})</value>
  </data>
  <data name="NormalChunkController_Text" xml:space="preserve">
    <value>チャンク {0}</value>
  </data>
  <data name="NSFController_AcAddNormalChunk" xml:space="preserve">
    <value>チャンクの追加</value>
  </data>
  <data name="NSFController_Text" xml:space="preserve">
    <value>NSFファイル</value>
  </data>
  <data name="OldAnimationEntryController_Text" xml:space="preserve">
    <value>旧アニメーション ({0})</value>
  </data>
  <data name="OldModelEntryController_Text" xml:space="preserve">
    <value>旧モデル ({0})</value>
  </data>
  <data name="OldMusicEntryController_Text" xml:space="preserve">
    <value>旧音楽 ({0})</value>
  </data>
  <data name="OldSceneryEntryController_Text" xml:space="preserve">
    <value>旧風景 ({0})</value>
  </data>
  <data name="OldSoundChunkController_Text" xml:space="preserve">
    <value>旧サウンドチャンク {0}</value>
  </data>
  <data name="ImageEntryController_Text" xml:space="preserve">
    <value>イメージ ({0})</value>
  </data>
  <data name="MapEntryController_Text" xml:space="preserve">
    <value>マップ ({0})</value>
  </data>
  <data name="OldZoneEntryController_Text" xml:space="preserve">
    <value>旧ゾーン ({0})</value>
  </data>
  <data name="PaletteEntryController_Text" xml:space="preserve">
    <value>パレット ({0})</value>
  </data>
  <data name="SceneryEntryController_Text" xml:space="preserve">
    <value>風景 ({0})</value>
  </data>
  <data name="SoundChunkController_Text" xml:space="preserve">
    <value>サウンドチャンク {0}</value>
  </data>
  <data name="SoundEntryController_Text" xml:space="preserve">
    <value>サウンド ({0})</value>
  </data>
  <data name="SpeechChunkController_Text" xml:space="preserve">
    <value>スピーチチャンク {0}</value>
  </data>
  <data name="SpeechEntryController_Text" xml:space="preserve">
    <value>スピーチ ({0})</value>
  </data>
  <data name="T11EntryController_Text" xml:space="preserve">
    <value>T11 ({0})</value>
  </data>
  <data name="T15EntryController_Text" xml:space="preserve">
    <value>T15 ({0})</value>
  </data>
  <data name="T17EntryController_Text" xml:space="preserve">
    <value>T17 ({0})</value>
  </data>
  <data name="T1EntryController_Text" xml:space="preserve">
    <value>T1 ({0})</value>
  </data>
  <data name="ColoredAnimationEntryController_Text" xml:space="preserve">
    <value>色付きアニメーション ({0})</value>
  </data>
  <data name="T21EntryController_Text" xml:space="preserve">
    <value>T21 ({0})</value>
  </data>
  <data name="SLSTEntryController_Text" xml:space="preserve">
    <value>ソートリスト ({0})</value>
  </data>
  <data name="T6EntryController_Text" xml:space="preserve">
    <value>T6 ({0})</value>
  </data>
  <data name="TextureChunkController_Text" xml:space="preserve">
    <value>テクスチャチャンク {1} ({0})</value>
  </data>
  <data name="UnprocessedChunkController_AcProcess" xml:space="preserve">
    <value>チャンクの処理化</value>
  </data>
  <data name="UnprocessedChunkController_Text" xml:space="preserve">
    <value>未処理のチャンク {1} (Ｔ{0})</value>
  </data>
  <data name="UnprocessedEntryController_Text" xml:space="preserve">
    <value>未処理のＴ{0} ({1})</value>
  </data>
  <data name="WavebankChunkController_Text" xml:space="preserve">
    <value>Wavebank チャンク {0}</value>
  </data>
  <data name="WavebankEntryController_Text" xml:space="preserve">
    <value>Wavebank ({0})</value>
  </data>
  <data name="ZoneEntryController_Text" xml:space="preserve">
    <value>ゾーン ({0})</value>
  </data>
  <data name="ProtoZoneEntryController_Text" xml:space="preserve">
    <value>プロトタイプゾーン ({0})</value>
  </data>
  <data name="AnimationEntryController_Text" xml:space="preserve">
    <value>アニメーション ({0})</value>
  </data>
  <data name="EntityController_Text" xml:space="preserve">
    <value>エンティティ</value>
  </data>
  <data name="FrameController_Text" xml:space="preserve">
    <value>フレーム</value>
  </data>
  <data name="ItemController_Text" xml:space="preserve">
    <value>アイテム</value>
  </data>
  <data name="ProtoAnimationEntryController_Text" xml:space="preserve">
    <value>プロトタイプアニメーション ({0})</value>
  </data>
  <data name="GOOLv0EntryController_Text" xml:space="preserve">
    <value>プロトタイプGOOL ({0})</value>
  </data>
  <data name="GOOLv1EntryController_Text" xml:space="preserve">
    <value>GOOL ({0})</value>
  </data>
  <data name="GOOLv2EntryController_Text" xml:space="preserve">
    <value>GOOLv2 ({0})</value>
  </data>
  <data name="GOOLv3EntryController_Text" xml:space="preserve">
    <value>GOOLv3 ({0})</value>
  </data>
  <data name="ModelEntryController_Compressed_Text" xml:space="preserve">
    <value>圧縮モデル ({0})</value>
  </data>
  <data name="OldCameraController_Text" xml:space="preserve">
    <value>カメラ</value>
  </data>
  <data name="OldEntityController_Text" xml:space="preserve">
    <value>エンティティ {0} ({1}-{2})</value>
  </data>
  <data name="OldSLSTEntryController_Text" xml:space="preserve">
    <value>旧ソートリスト ({0})</value>
  </data>
  <data name="ProtoSceneryEntryController_Text" xml:space="preserve">
    <value>プロトタイプ風景 ({0})</value>
  </data>
  <data name="EntryChunkController_AcAddNew" xml:space="preserve">
    <value>エントリの追加</value>
  </data>
  <data name="EntryChunkController_AcImport" xml:space="preserve">
    <value>エントリをインポート</value>
  </data>
  <data name="EntryController_AcExport" xml:space="preserve">
    <value>エントリ 「{0}」 をエクスポート</value>
  </data>
  <data name="EntryController_AcRename" xml:space="preserve">
    <value>エントリ 「{0}」 の名前を変更</value>
  </data>
  <data name="NSFController_AcAddOldSoundChunk" xml:space="preserve">
    <value>旧サウンドチャンクの追加</value>
  </data>
  <data name="NSFController_AcAddSoundChunk" xml:space="preserve">
    <value>サウンドチャンクの追加</value>
  </data>
  <data name="NSFController_AcAddSpeechChunk" xml:space="preserve">
    <value>スピーチチャンクの追加</value>
  </data>
  <data name="NSFController_AcAddWavebankChunk" xml:space="preserve">
    <value>Wavebank チャンクの追加</value>
  </data>
  <data name="NSFController_AcFixBoxCount" xml:space="preserve">
    <value>箱数の修正</value>
  </data>
  <data name="NSFController_AcFixDetonator" xml:space="preserve">
    <value>！箱 (緑) の修正</value>
  </data>
  <data name="NSFController_AcImportChunk" xml:space="preserve">
    <value>チャンクのインポート</value>
  </data>
  <data name="NSFController_AcShowLevel" xml:space="preserve">
    <value>ステージ全体を表示</value>
  </data>
  <data name="TextureChunkController_AcRecalcChecksum" xml:space="preserve">
    <value>チェックサムの再計算</value>
  </data>
  <data name="TextureChunkController_AcRename" xml:space="preserve">
    <value>チャンク名の変更</value>
  </data>
  <data name="UnprocessedEntryController_AcProcess" xml:space="preserve">
    <value>エントリ 「{0}」 の処理化</value>
  </data>
  <data name="ZoneEntryController_AcAddEntity" xml:space="preserve">
    <value>エンティティの追加</value>
  </data>
  <data name="TextureChunkController_AcOpenViewer" xml:space="preserve">
    <value>ビューアーを開く</value>
  </data>
  <data name="NSFController_AcShowLevelZones" xml:space="preserve">
    <value>全てのゾーンを表示</value>
  </data>
</root>